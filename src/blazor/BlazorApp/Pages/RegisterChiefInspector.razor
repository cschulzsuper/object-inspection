@page "/organizations/{organization}/register"

@layout UnauthorizedLayout

@inject ITranslator<RegisterChiefInspector> Translator
@inject IOrganizationRequestHandler OrganizationHandler
@inject NavigationManager NavigationManager

@attribute [Authorize]

<PageTitle>@Translator["Inspector sign up"]</PageTitle>

<EditForm Model="@_model" OnValidSubmit="@OnValidSubmitAsync">
    <DataAnnotationsValidator />

    <img class="mb-4" src="../img/logo.png" alt="" width="128" height="128">
    <h1 class="h3 mb-3 fw-normal" id="registerChiefInspectorHeadline">@Translator["Inspector sign up"]</h1>

    <div class="form-floating mb-3 text-start">
        <InputText class="form-control" id="inspector" @bind-Value="_model.Inspector" />
        <label for="inspector">@Translator[$"Inspector"]</label>
    </div>

    @if(context.GetValidationMessages().Any())
{
    <div class="card card-body tex-wrap">
            <ValidationSummary />    
        </div>
}
else
{
    <button
            id="submit"
            type="submit"
            class="w-100 btn btn-lg btn-primary">
            @Translator[$"Sign up"]
        </button>
}

</EditForm>

@code {

private InitializeOrganizationRequest _model = new InitializeOrganizationRequest();

[Parameter]
public string Organization { get; set; } = null!;

private async Task OnValidSubmitAsync()
{
    await OrganizationHandler.InitializeAsync(Organization, _model);
    NavigationManager.NavigateTo("/");
}

}