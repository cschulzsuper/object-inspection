@page "/extensions/create"

@inject ITranslator<Create> Translator
@inject NavigationManager NavigationManager
@inject IExtensionRequestHandler ExtensionRequestHandler

@attribute [Authorize("ManagementRead")]

<div class="container-fluid">
    <h1>@Translator[$"Create extension"]</h1>
</div>

<EditForm Model="@_request" OnValidSubmit="@OnValidSubmitAsync">
    <DataAnnotationsValidator />

    <div class="container-fluid">
        <div class="form-group">
            <label>@Translator[$"Type"]</label>
            <InputText 
                class="form-control"
                id="extensionAggregateType" @bind-Value="_request.AggregateType" />
        </div>
    </div>

    @if(context.GetValidationMessages().Any())
{
    <div class="container-fluid">
            <div class="card card-body tex-wrap">
                <ValidationSummary />    
            </div>
        </div>
} 
else 
{
    <div class="container-fluid">
            <AuthorizedButton Policy="ManagementFull" 
                id="submit"
                type="submit"
                class="btn btn-primary">@Translator[$"Submit"]</AuthorizedButton>
        </div>
}

</EditForm>

@code {
    private ExtensionRequest _request = new ExtensionRequest();

    private async Task OnValidSubmitAsync()
    {
        await ExtensionRequestHandler.CreateAsync(_request);
        NavigationManager.NavigateTo("/extensions");
    }

}