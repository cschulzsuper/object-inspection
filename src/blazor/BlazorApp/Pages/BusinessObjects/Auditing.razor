@page "/business-objects/auditing"

@inject ITranslator Translator
@inject NavigationManager NavigationManager
@inject IBusinessObjectHandler BusinessObjectHandler
@inject AppAuthentication AppAuthentication

@attribute [Authorize("Inspector")]

<div class="container-fluid">
    <h1>@Translator["Business objects"]</h1>
</div>

<div class="container-fluid">

@if (_businessObjects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-sm">
        <thead>
            <tr>
                <th class="col-4">@Translator["Unique name"]</th>
                <th class="col-7">@Translator["Display name"]</th>
                <th class="col-1"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var businessObject in _businessObjects)
            {
                <tr>
                    <td class="col-4">@businessObject.UniqueName</td>
                    <td class="col-7">@businessObject.DisplayName</td>
                    <td class="col-1">
                        <button class="btn btn-outline-primary btn-block" 
                            @onclick="() => NavigateToInspectionAudit(businessObject.UniqueName)"><span class="oi oi-media-play"/></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

</div>

@code {

    private ICollection<BusinessObjectResponse>? _businessObjects = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await QueryAsync();
            StateHasChanged();
        }
    }

    public async Task QueryAsync()
    {
        _businessObjects = new List<BusinessObjectResponse>();

        var response = BusinessObjectHandler.GetAllForInspector(AppAuthentication.Inspector);

        await foreach (var businessObject in response)
        {
            _businessObjects.Add(businessObject);
            StateHasChanged();
        }
    }

    public void NavigateToInspections(string businessObject)
        => NavigationManager.NavigateTo($"/business-objects/{businessObject}/inspections");
    
    public void NavigateToInspectionAudit(string businessObject)
        => NavigationManager.NavigateTo($"/business-objects/{businessObject}/audit");
}