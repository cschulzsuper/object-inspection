@page "/register"
@using Super.Paula.Application.Authentication
@using Super.Paula.Application.Authentication.Requests

@layout UnauthorizedLayout

@inject ITranslator<Register> Translator
@inject IAuthenticationRequestHandler AuthenticationHandler
@inject NavigationManager NavigationManager

<PageTitle>@Translator["Sign up"]</PageTitle>

<EditForm Model="@model" OnValidSubmit="@OnValidSubmitAsync">
<DataAnnotationsValidator />

    <img class="mb-4" src="../img/logo.png" alt="" width="128" height="128">
    <h1 class="h3 mb-3 fw-normal">@Translator["Sign up"]</h1>

    <div class="form-floating mb-3 text-start">
        <InputText class="form-control" id="identityUniqueName" @bind-Value="model.UniqueName" placeholder="@Translator[$"Identity"]" />
        <label for="identityUniqueName">@Translator[$"Identity"]</label>
    </div>

    <div class="form-floating mb-3 text-start">
        <InputText class="form-control" id="identityMailAddress" @bind-Value="model.MailAddress" placeholder="@Translator[$"Mail address"]" />
        <label for="identityMailAddress">@Translator[$"Mail address"]</label>
    </div>
        
    <div class="form-floating mb-3 text-start">
        <InputText class="form-control" id="identitySecret" @bind-Value="model.Secret" type="password" placeholder="@Translator[$"Password"]" />
        <label for="identitySecret">@Translator[$"Password"]</label>
    </div>

    @if (context.GetValidationMessages().Any())
    {
        <div class="card card-body tex-wrap">
            <ValidationSummary/>
        </div>
    }
    else
    {
        <button id="submit"
                type="submit"
                class="w-100 btn btn-lg btn-primary">
            @Translator[$"Sign up"]
        </button>
        <small class="form-text text-muted"><a href="sign-in">@Translator[$"Sign in"]</a></small>
    }

</EditForm>

@code {
    private RegisterIdentityRequest model = new RegisterIdentityRequest();

    private async Task OnValidSubmitAsync()
    {
        await AuthenticationHandler.RegisterAsync(model);
        NavigationManager.NavigateTo("/");
    }

}