@page "/register-organization"

@inject ITranslator<RegisterOrganization> Translator
@inject IOrganizationRequestHandler OrganizationHandler
@inject NavigationManager NavigationManager

@attribute [Authorize]

<div class="container-fluid">
    <h1>@Translator[$"Organization sign up"]</h1>
</div>

<EditForm Model="@_model" OnValidSubmit="@OnValidSubmitAsync">
    <DataAnnotationsValidator />

    <div class="container-fluid">
        <div class="form-group">
            <label>@Translator[$"Unique name"]</label>
            <InputText class="form-control" id="organizationUniqueName" @bind-Value="_model.UniqueName" />
        </div>
        <div class="form-group">
            <label>@Translator[$"Display name"]</label>
            <InputText class="form-control" id="organizationDisplayName" @bind-Value="_model.DisplayName" />
        </div>
    </div>

    @if(context.GetValidationMessages().Any())
{
    <div class="container-fluid">
            <div class="card card-body tex-wrap">
                <ValidationSummary />    
            </div>
        </div>
} 
else 
{
    <div class="container-fluid">
            <button 
                id="submit"
                type="submit" 
                class="btn btn-primary">@Translator[$"Submit"]</button>
        </div>
}

</EditForm>

@code {

private RegisterOrganizationRequest _model = new RegisterOrganizationRequest();

private async Task OnValidSubmitAsync()
{
await OrganizationHandler.RegisterAsync(_model);
NavigationManager.NavigateTo("/");
}
}