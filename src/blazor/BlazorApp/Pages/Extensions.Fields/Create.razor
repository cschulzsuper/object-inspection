@page "/extensions/{aggregateType}/fields/create"

@inject ITranslator<Create> Translator
@inject NavigationManager NavigationManager
@inject IExtensionRequestHandler ExtensionRequestHandler

@attribute [Authorize("OnlyChiefOrObserver")]

<PageTitle>@Translator[$"Create extension field"]</PageTitle>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">@Translator[$"Create extension field"]</h1>
</div>

<EditForm Model="@_request" OnValidSubmit="@OnValidSubmitAsync">
    <DataAnnotationsValidator />

    <div class="container-fluid pb-3 mb-3 border-bottom">
        <div class="form-floating mt-3">
            <InputText class="form-control"
                       id="extensionFieldUniqueName" @bind-Value="_request.UniqueName" />
            <label for="extensionFieldUniqueName">@Translator[$"Unique name"]</label>
        </div>
        <div class="form-floating mt-3">
            <InputText class="form-control"
                       id="extensionFieldDisplayName" @bind-Value="_request.DisplayName" />
            <label for="extensionFieldDisplayName">@Translator[$"Display name"]</label>
        </div>
        <div class="form-floating mt-3">
            <InputText class="form-control"
                       id="extensionFieldDataName" @bind-Value="_request.DataName" />
            <label for="extensionFieldDataName">@Translator[$"Data name"]</label>
        </div>
        <div class="form-floating mt-3">
            <InputText class="form-control"
                       id="extensionFieldDataType" @bind-Value="_request.DataType" />
            <label for="extensionFieldDataType">@Translator[$"Data type"]</label>
        </div>
    </div>

    @if(context.GetValidationMessages().Any())
{
    <div class="container-fluid pb-4 mb-5">
            <div class="card card-body tex-wrap">
                <ValidationSummary />    
            </div>
        </div>
} 
else 
{
    <div class="container-fluid pb-4 mb-5">
            <AuthorizedButton Policy="OnlyChief" 
                              id="submit"
                              type="submit"
                              class="btn btn-sm btn-primary">@Translator[$"Submit"]</AuthorizedButton>
        </div>
}

</EditForm>

@code {

[Parameter]
public string AggregateType { get; set; } = string.Empty;

private ExtensionFieldRequest _request = new ExtensionFieldRequest();

private async Task OnValidSubmitAsync()
{
    await ExtensionRequestHandler.CreateFieldAsync(AggregateType, _request);
    NavigationManager.NavigateTo("/extensions");
}
}