@page "/identities/create"

@inject ITranslator Translator
@inject NavigationManager NavigationManager
@inject IIdentityHandler IdentityHandler

@attribute [Authorize("RequiresMaintainability")]

<div class="container-fluid">
    <h1>@Translator["Create identity"]</h1>
</div>

<EditForm Model="@_request" OnValidSubmit="@OnValidSubmitAsync">
    <DataAnnotationsValidator />

    <div class="container-fluid">
        <div class="form-group">
            <label>@Translator["Unique name"]</label>
            <InputText class="form-control" id="displayName" @bind-Value="_request.UniqueName" />
        </div>
        <div class="form-group">
            <label>@Translator["Mail address"]</label>
            <InputText class="form-control" id="uniqueName" @bind-Value="_request.MailAddress" />
        </div>
    </div>

    @if(context.GetValidationMessages().Any())
    {
        <div class="container-fluid">
            <div class="card card-body tex-wrap">
                <ValidationSummary />    
            </div>
        </div>
    } 
    else 
    {
        <div class="container-fluid">
            <button type="submit" class="btn btn-primary">@Translator["Submit"]</button>
        </div>
    }

</EditForm>

@code {
    private IdentityRequest _request = new IdentityRequest();

    private async Task OnValidSubmitAsync()
    {
        await IdentityHandler.CreateAsync(_request);
        NavigationManager.NavigateTo("/identities");
    }
}