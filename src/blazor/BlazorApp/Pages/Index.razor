@page "/"

@inject ITranslator Translator

<DemoNote>
    @Translator.Markdown($"*{"Paula"}* is a simple auditing app, that does not follow any official workflow. You can click around, but the demo mode will prevent wrongdoing.")
</DemoNote>

@if(_mode == Mode.SignIn)
{
    <SignIn/>
}
@if(_mode == Mode.SignInInspector)
{
    <SignInInspector/>
}
@if(_mode == Mode.Authenticated)
{
    <div class="container-fluid">
        <h1 id="indexHeadline">@Translator[$"Welcome"]</h1>
    </div>
}

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; } = null!;

    private Mode _mode = Mode.SignIn;

    protected override async Task OnParametersSetAsync()
    {
        var user = (await AuthenticationState).User;

        if (user.Identity?.IsAuthenticated != true)
        {
            _mode = Mode.SignIn;
            return;
        }

        if (!user.HasInspector())
        {
            _mode = Mode.SignInInspector;
            return;
        }

        _mode = Mode.Authenticated;
        return;
    }

    public enum Mode
    {
        SignIn,
        SignInInspector,
        Authenticated
    }
}